# Configuration file for concept bottleneck model experiments

experiment_name: "bird_classification"  # Name of the experiment for logging purposes

#Meta
name: "CUB"  # Name of the dataset (currently supports "CUB" for Caltech-UCSD Birds)
seed: 1 # Random seed
mode: Sequential #"Standard", "Independent", "Joint", "Sequential","end"  # List of training modes to iterate over
device: "auto"  # Device to use for training ("auto" for automatic detection, "cuda" for GPU, "cpu" for CPU)


#dataset
#image_dir: data/CUB_200_2011/images # test image folder to run inference on'
#data_dir: data/CUB_processed/filtered  # Path to the dataset directory with anotoated pickle files note that the data directory should contain the following files: 'train.pkl', 'val.pkl', 'test.pkl' not the images
resampling: False  # Whether to use resampling




CUB_dataloader: # Paremeter for the CUB dataloader
  CUB_dir: data/CUB_200_2011 # Path to the CUB dataset directory
  split_file: data//train_test_val.pkl # Path to the split file

  #Concept (attributes) settings
  return_concepts: False # Whether to return concept labels
  return_visibility: False # Whether to return visibility labels can not be used with majority voting if return_concepts is True the dataloader will return a tuple of (concept_labels, visibility_labels)

  use_majority_voting: True # Whether to use majority voting for concepts labels
  min_class_count: 10 # apply the filer that removes concepts present in less than min_class_count classes only relevant after majority voting if false use all 320 concepts



#training
batch_size: 32
epochs: 5 #2000  # Number of training epochs
lr: 0.001  # Initial learning rate for optimization
optimizer: 'Adam' # Optimizer to use for training (e.g., "Adam", "SGD", "RMSprop")
momentum: 0.9  # Momentum factor for SGD optimizer
weight_decay: 5e-5  # Weight decay (L2 penalty) for optimization
lambda1: 0.1  # Weighting factor for concept loss in joint training
scheduler_step: 1000  # Number of steps before decaying current learning rate by half
min_lr: 0.0001  # Minimum learning rate
lr_decay_size: 0.1  # Learning rate decay factor
weighted_loss: "" # 'Whether to use weighted loss for single attribute or multiple ones' option is '' or 'multiple'
attr_loss_weight: 0.1 # Lambda for attribute loss in the joint training
normalize_loss: False # Whether to normalize loss by taking attr_loss_weight into account
transform_method: "resize" # Transformation method for the concept bottleneck model ("original","resized","center")



#models
concept_model: "inception"  # Type of model for concept prediction (e.g., "inception", "resnet")
pretrained: True  # Whether to use pretrained weights for the concept model
ckpt: False  #  if true combine train and val data to train the model
freeze: false  # Whether to freeze the bottom part of the inception network
use_aux: True # Whether to use auxiliary logits
bottleneck: false  # Whether to predict attributes before class labels

#output directorys
log_dir: None  # Directory to save logs and model checkpoints


#Concept model always use sigmoid activation
#use_relu: False #use relu activation in the end of the concpet classifyer.
#use_sigmoid: True #use sigmoid relu activation in the end of the concpet classifyer.